apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-nginx-ingress-controller
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.labels.name }}
    app.kubernetes.io/part-of: {{ .Values.labels.partOF }}
spec:
  updateStrategy:
    type: {{ .Values.deamon.updateStrat }} #delete l'ancien pods quand on update <> OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.labels.name }}
      app.kubernetes.io/part-of: {{ .Values.labels.partOF }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.labels.name }}
        app.kubernetes.io/part-of: {{ .Values.labels.partOF }}
      annotations:
        prometheus.io/port: {{ .Values.deamon.prometheusPort | quote}}
        prometheus.io/scrape: {{ .Values.deamon.prometheusScrape | quote}}
    spec:
      hostNetwork: {{ .Values.deamon.hostNetwork }}
      nodeSelector: # permet de choisir le noeud sur lequel, il va se dÃ©ployer
        role: {{ .Values.deamon.nodeSelector }}
      serviceAccountName: {{ .Release.Name }}-nginx-ingress-serviceaccount
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.23.0
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/{{ .Release.Name }}-nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/{{ .Release.Name }}-tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/{{ .Release.Name }}-udp-services
            - --annotations-prefix=nginx.ingress.kubernetes.io
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10